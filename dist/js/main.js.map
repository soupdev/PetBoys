{"version":3,"sources":["../../src/js/main.js"],"names":["console","log","i","access_token","dog_file","adoptions","document","querySelector","showDogs","length","dog_name","name","dog_desc","description","dog_gender","gender","dog_photos","primary_photo_cropped","sm_dog_photo","small","adoption_file","createElement","setAttribute","adoption_info","pet_info","adoption_photo","pet_name","pet_desc","adopt_button","pet_photo","src","innerText","innerHTML","appendChild","goGetDogs","axios","get","then","response","data","animals","catch","error"],"mappings":"aAAAA,QAAQC,IAAR,UACA,IAEIC,EAFAC,kBAAAA,EACAC,cAAAA,EAEAC,UAAYC,SAASC,cAAc,cAInCC,SAAW,WAEXR,QAAQC,IAAI,qBAGZ,IAAKC,EAAI,EAAGA,EAAIE,SAASK,OAAQP,IAAI,CAMjC,IAAIQ,EAAWN,SAASF,GAAGS,KACvBC,EAAWR,SAASF,GAAGW,YACvBC,EAAaV,SAASF,GAAGa,OACzBC,EAAaZ,SAASF,GAAGe,sBAEzBC,OAAAA,EAGAA,EADY,MAAbF,EACgBA,EAAWG,MAGX,yBAOnB,IAAIC,EAAgBd,SAASe,cAAc,OAC3CD,EAAcE,aAAa,QAAS,iBAGpC,IAAIC,EAAgBjB,SAASe,cAAc,OAC3CE,EAAcD,aAAa,QAAQ,iBAGnC,IAAIE,EAAWlB,SAASe,cAAc,OACtCG,EAASF,aAAa,QAAQ,YAG9B,IAAIG,EAAiBnB,SAASe,cAAc,OAC5CI,EAAeH,aAAa,QAAQ,kBAIpC,IAAII,EAAWpB,SAASe,cAAc,MACtCK,EAASJ,aAAa,QAAQ,YAE9B,IAAIK,EAAWrB,SAASe,cAAc,KACtCM,EAASL,aAAa,QAAQ,YAE9B,IAAIM,EAAetB,SAASe,cAAc,UAEtCQ,EAAYvB,SAASe,cAAc,OACvCQ,EAAUP,aAAa,QAAQ,WAC/BO,EAAUC,IAAV,GAAkBZ,EAIlBQ,EAASK,UAAYrB,EACrBiB,EAASK,UAAapB,EAAW,eAAsBE,EACvDc,EAAaG,UAAY,aAGzBP,EAASS,YAAYP,GACrBF,EAASS,YAAYN,GACrBH,EAASS,YAAYL,GAIrBL,EAAcU,YAAYT,GAG1BC,EAAeQ,YAAYJ,GAG3BT,EAAca,YAAYV,GAC1BH,EAAca,YAAYR,GAG1BpB,UAAU4B,YAAYb,KAe1Bc,UAAY,WACZlC,QAAQC,IAAI,sBAEZkC,MACKC,IAAI,4EAA8EjC,cAClFkC,KAAK,SAAUC,GAEZlC,SAAWkC,EAASC,KAAKC,QACzBxC,QAAQC,IAAIG,YAEfiC,KAAK7B,UACLiC,MAAM,SAAUC,GAEb1C,QAAQC,IAAIyC,KAEfL,KAAK,eAKdF,MACKC,IAAI,kEACJC,KAAK,SAAUC,GAEZnC,aAAemC,EAASC,KAAKpC,aAC7BH,QAAQC,IAAIqC,EAASC,KAAKpC,gBAE7BkC,KAAKH,WACLO,MAAM,SAAUC,GAEb1C,QAAQC,IAAIyC,KAEfL,KAAK","sourcesContent":["console.log(`Hello.`)    \nlet access_token; // create a variable \nlet dog_file;\nvar i;\nlet adoptions = document.querySelector(\".adoptions\");\n\n//define HTML div to append elements to later \n\nlet showDogs = function(){\n    \n    console.log('showDogs function');\n   // console.log(dog_file[0].name);\n    let intro = \"Hello, my name is \";\n    for (i = 0; i < dog_file.length; i++){\n        //i=0; so long as i's value is shorter than the lentgh of the array; increase the value of i until finished\n        \n        //store pet data from dog_file into vars\n            //each loop, var = value of the object in the array\n        //console.log(dog_name);\n        let dog_name = dog_file[i].name;\n        let dog_desc = dog_file[i].description;\n        let dog_gender = dog_file[i].gender;\n        let dog_photos = dog_file[i].primary_photo_cropped;\n        //console.log (dog_photos);\n        let sm_dog_photo;\n        //this is an array of photos per dog, some arrays are null\n        if(dog_photos !=null){ //if the array is not empty\n            sm_dog_photo = dog_photos.small;\n            //console.log(sm_dog_photo);\n        } else{ //if array is empty, img src is default img\n            sm_dog_photo = \"dist/img/dog-heads.png\";\n        }\n       \n        //each pet has a file (adoption card), each card has text section (adoption info) and picture section (adoption photo.\n\n        //create divs and add class names\n        // this div is a container per pet info \n        var adoption_file = document.createElement(\"div\");\n        adoption_file.setAttribute(\"class\", \"adoption-file\");\n      \n       //this div is a countainer for all text info about each dog\n        var adoption_info = document.createElement(\"div\"); \n        adoption_info.setAttribute(\"class\",\"adoption-info\")\n       \n       //this div holds the text information about each dog\n        var pet_info = document.createElement(\"div\"); \n        pet_info.setAttribute(\"class\",\"pet-info\")\n       \n        //this div holds the photo of each dog\n        var adoption_photo = document.createElement(\"div\");\n        adoption_photo.setAttribute(\"class\",\"adoption-photo\");\n        \n\n        //create elements and add class name\n        var pet_name = document.createElement(\"h3\");\n        pet_name.setAttribute(\"class\",\"pet-name\");\n\n        var pet_desc = document.createElement(\"p\");\n        pet_desc.setAttribute(\"class\",\"pet-desc\");\n\n        var adopt_button = document.createElement(\"button\");\n\n        var pet_photo = document.createElement(\"img\");\n        pet_photo.setAttribute(\"class\",\"pet-img\");\n        pet_photo.src= `${sm_dog_photo}`;\n        \n\n        //add inner data to elements \n        pet_name.innerText = dog_name; \n        pet_desc.innerHTML =  dog_desc + \"<br>\" + \"Gender: \" + dog_gender;\n        adopt_button.innerText = 'Learn More'\n        \n        //add text divs to pet_info \n        pet_info.appendChild(pet_name);\n        pet_info.appendChild(pet_desc);\n        pet_info.appendChild(adopt_button);\n        \n\n        //add all pet_info to adoption_info\n        adoption_info.appendChild(pet_info);\n\n        //add img to adoption_photo\n        adoption_photo.appendChild(pet_photo);\n\n        //add all adoption_info and adoption_photo to adoption_file\n        adoption_file.appendChild(adoption_info);\n        adoption_file.appendChild(adoption_photo);\n       \n        //add adoption card to HTML document\n        adoptions.appendChild(adoption_file);\n\n    }\n   \n    // document.getElementsByClassName(\".adoptions\").innerHtml += intro;\n\n    // let x;\n    // for (x=0; x < adoption_card.length;x++){\n    //     adoption_card[x].innerHTML += intro;\n    // }\n\n    //here is where I make divs, classes, etc and append to html \n\n}\n\nlet goGetDogs = function(){\n    console.log('goGetDogs function')\n\n    axios\n        .get('http://circuslabs.net/proxies/petfinder/?endpoint=animals?type=dog&token=' + access_token) // a request for the info from the api\n        .then(function (response) {\n            // handle success\n            dog_file = response.data.animals; //.data.access_token; // store the access inside the variable that's on the global scope \n            console.log(dog_file); //show inside object > data > access token \n        })\n        .then(showDogs)\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n}\n\naxios //the javascript library that makes the request \n    .get('http://circuslabs.net/proxies/petfinder/?endpoint=oauth2/token') // a request for the access token\n    .then(function (response) {\n        // handle success\n        access_token = response.data.access_token; // store the access inside the variable that's on the global scope \n        console.log(response.data.access_token); //show inside object > data > access token \n    })\n    .then(goGetDogs) //execute named function stored in the variable\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n    .then(function () {\n        // always executed\n    });\n\n"]}